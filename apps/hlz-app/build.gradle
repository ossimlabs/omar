buildscript {
  ext {
    grailsVersion = project.grailsVersion
    baseImage = ""
  }
  if(System.env.OMAR_COMMON_PROPERTIES)
  {
    apply from: System.env.OMAR_COMMON_PROPERTIES
  }
  repositories {
    mavenLocal()
    maven { url "${ossimMavenProxy}" }
    maven { url "https://repo.grails.org/grails/core" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.5.0"
    classpath "org.grails.plugins:hibernate:4.3.10.5"
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
  }
}

plugins {
  id "io.spring.dependency-management" version "0.5.4.RELEASE"
  id "com.jfrog.artifactory" version "4.4.13"
}

evaluationDependsOnChildren()

apply plugin: "spring-boot"
apply plugin: "asset-pipeline"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"

apply plugin: "com.jfrog.artifactory"
apply plugin: "java"
apply plugin: "maven-publish"

group "io.ossim.omar.apps"
version "${buildVersion}-${buildVersionTag}"

ext {
  grailsVersion = project.grailsVersion
  gradleWrapperVersion = project.gradleWrapperVersion
}

assets {
  minifyJs = true
  minifyCss = true
  includes = ["fonts/*"]
  excludes = ["**/*-debug.js", "**/*-deps.js", "**/*.gz", "**/*.txt", "**/*.less", "**/*.html", "**/i18n/**", "**/",
              ".grunt/**", "**/locale/**", "webjars/jquery/2.1.4/src/intro.js", "webjars/jquery/2.1.4/src/outro.js"]
}

repositories {
  mavenLocal()
  maven { url "${ossimMavenProxy}" }
  maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
  imports {
    mavenBom "org.grails:grails-bom:$grailsVersion"
  }
  applyMavenExclusions false
}

dependencies {
  compile(group: "io.ossim.omar.plugins", name: "omar-oms", version: "1.0.0-${buildVersionTag}", changing: jarArtifactsChanging)
  compile(group: "io.ossim.omar.plugins", name: "omar-geoscript", version: "1.0.0-${buildVersionTag}", changing: jarArtifactsChanging)
  compile "org.webjars.bower:bootstrap:3.3.5"
  compile "org.webjars:bootswatch-superhero:3.3.5"

  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.springframework.boot:spring-boot-starter-tomcat"
  compile "org.grails:grails-dependencies:3.2.7"
  compile "org.grails:grails-web-boot"

  compile "org.grails.plugins:hibernate"
  compile "org.grails.plugins:cache"
  compile "org.hibernate:hibernate-ehcache"
  compile "org.grails.plugins:scaffolding"
  compile "org.grails.plugins:grails3-cors-interceptor:1.1.0"

  runtime "org.grails.plugins:asset-pipeline"

  testCompile "org.grails:grails-plugin-testing"
  testCompile "org.grails.plugins:geb"

  // Note: It is recommended to update to a more robust driver (Chrome, Firefox etc.)
  testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.44.0"

  console "org.grails:grails-console"
}

task wrapper( type: Wrapper ) {
  gradleVersion = gradleWrapperVersion
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}

artifactory {
  contextUrl = "${artifactoryContextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
  publish {
    repository {
      repoKey = "libs-${buildVersionTag.toLowerCase()}-local"
      username = "${artifactoryUser}"
      password = "${artifactoryPassword}"
      maven = true
    }
    defaults{
      publications("mavenJava")
    }
  }
  resolve {
    repository {
      repoKey = "libs-${buildVersionTag.toLowerCase()}"
      username = "${artifactoryUser}"
      password = "${artifactoryPassword}"
      maven = true
    }
  }
}
