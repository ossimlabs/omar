buildscript {
  ext {
    grailsVersion = project.grailsVersion
    baseImage = "o2-base"
  }
  if(System.env.OMAR_COMMON_PROPERTIES)
  {
    apply from: System.env.OMAR_COMMON_PROPERTIES
  }
  repositories {
    mavenLocal()
    maven { url "${ossimMavenProxy}" }
    maven { url "https://repo.grails.org/grails/core" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
    classpath "org.grails.plugins:hibernate4:5.0.10"
    classpath "net.errbuddy.plugins:babel-asset-pipeline:2.1.0"
  }
}

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"
apply plugin: "asset-pipeline"

apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "maven"

group "io.ossim.omar.apps"

ext {
  grailsVersion = project.grailsVersion
  gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
  mavenLocal()
  maven { url "${ossimMavenProxy}" }
  maven { url "https://repo.boundlessgeo.com/main" }
  maven { url "http://download.osgeo.org/webdav/geotools" }
  mavenCentral()
  maven { url "http://maven.geo-solutions.it" }
  maven { url "https://artifacts.unidata.ucar.edu/content/repositories/unidata" }
  maven { url "https://github.com/ElectronicChartCentre/ecc-mvn-repo/raw/master/releases" }
  maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
  imports {
    mavenBom "org.grails:grails-bom:$grailsVersion"
    mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.SR7"
  }
  applyMavenExclusions false
}

dependencies {
  runtime "org.grails.plugins:grails-console:2.0.8"

  compile(group: "io.ossim.omar.plugins", name: "omar-openlayers", version: "1.0.0-${buildVersionTag}", changing: jarArtifactsChanging)

  compile ( "org.geoscript:geoscript-groovy:1.8.0" ) {
    exclude module: "commons-beanutils"
    exclude module: "ehcache"
    exclude module: "groovy-all"
    exclude module: "slf4j-log4j12"
    exclude module: "xml-apis"
  }
  compile "commons-beanutils:commons-beanutils:1.9.2"

  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.grails:grails-core"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-starter-tomcat"
  compile "org.grails:grails-dependencies:3.1.14"
  compile "org.grails:grails-web-boot"
  compile "org.grails.plugins:cache"
  compile "org.grails.plugins:scaffolding"
  compile "org.grails.plugins:hibernate4"
  compile "org.hibernate:hibernate-ehcache"
  console "org.grails:grails-console"
  profile "org.grails.profiles:web"
  runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.8.2"
  runtime "com.h2database:h2"
  testCompile "org.grails:grails-plugin-testing"
  testCompile "org.grails.plugins:geb"
  testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
  testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

  compile "org.springframework.cloud:spring-cloud-starter-config"
  compile "org.springframework.cloud:spring-cloud-starter-eureka"

  compile "net.errbuddy.plugins:babel-asset-pipeline:2.1.0"

  compile "org.webjars:bootstrap:3.3.5"
}

assets {
  minifyJs = true
  minifyCss = true
  excludes = [
  "**/application.js",
  "**/i18n/**",
  "**/jquery*",
  "**/omar/**",
  "**/webjars/**",
  "**/*-debug.js",
  "**/*-deps.js",
  "**/*-openlayers*",
  "**/*.gz",
  "**/*.html",
  "**/*.txt",
  ]
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}
