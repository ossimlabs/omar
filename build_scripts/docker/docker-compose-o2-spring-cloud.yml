version: '2'
services:
  o2-download:
    build:
      context: ./o2-download
    environment:
      DBHOST: o2-db
      DBNAME: omar_prod
      DBPASS: abc123
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
    image: ${DOCKER_REGISTRY_URI}/o2-download
    ports:
      - "5011:8080"
    restart: always
    volumes:
      - /home:/home
      - /Users:/Users
  o2-jpip:
    build:
      context: ./o2-jpip
    environment:
      DBHOST: o2-db
      DBNAME: omar_prod
      DBPASS: abc123
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
      JPIPCACHEDIR: /data/jpip-cache
      JPIPSERVERPORT: :5004
      JPIPSERVERURL: spring-cloud.radiantbluecloud.com
    image: ${DOCKER_REGISTRY_URI}/o2-jpip
    ports:
      - "5003:8080"
    restart: always
    volumes:
      - /Users:/Users
      - /home:/home
  o2-mensa:
    build:
      context: ./o2-mensa
    environment:
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
    image: ${DOCKER_REGISTRY_URI}/o2-mensa
    ports:
      - "5014:8080"
    volumes:
      - /home:/home
      - /Users:/Users
  o2-omar:
    build:
      context: ./o2-omar
    environment:
      APIENABLED: "false"
      APIPORT:
      APIURL:
      BANNERCOLOR: green
      BANNERCLASSIFICATION: Unclassified
      DBHOST: o2-db
      DBNAME: omar_prod
      DBPASS: abc123
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
      DOWNLOADPORT:
      DOWNLOADURL: spring-cloud.radiantbluecloud.com/o2-download
      JPIPENABLED: "true"
      JPIPPORT:
      JPIPURL:
      KMLPORT:
      KMLURL: spring-cloud.radiantbluecloud.com/o2-superoverlay
      PREDIOENABLED: "false"
      PREDIOPORT:
      PREDIOURL: spring-cloud.radiantbluecloud.com/o2-predio
      PWIKENABLED: "true"
      PWIKPORT:
      PWIKURL:
      STAGERPORT:
      STAGERURL: spring-cloud.radiantbluecloud.com/o2-stager
      TWOFISHPORT:
      TWOFISHURL: spring-cloud.radiantbluecloud.com/twofishes
      USER_GUIDE_ENABLED: "true"
      USER_GUIDE_URL: ossimlabs.s3-website-us-east-1.amazonaws.com/o2/docs/
      WFSPORT:
      WFSURL: spring-cloud.radiantbluecloud.com/o2-wfs
      WMSPORT:
      WMSURL: spring-cloud.radiantbluecloud.com/o2-wms
      WMTSENABLED: "true"
      WMTSPORT:
      WMTSURL: spring-cloud.radiantbluecloud.com/o2-wmts
    image: ${DOCKER_REGISTRY_URI}/o2-omar
    ports:
      - "5010:8080"
    restart: always
    volumes:
      - /home:/home
      - /Users:/Users
  o2-stager:
    build:
      context: ./o2-stager
    environment:
      DBHOST: o2-db
      DBNAME: omar_prod
      DBPASS: abc123
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
    image: ${DOCKER_REGISTRY_URI}/o2-stager
    ports:
      - "5002:8080"
    restart: always
    volumes:
      - /home:/home
      - /Users:/Users
  o2-superoverlay:
    build:
      context: ./o2-superoverlay
    environment:
      DBHOST: o2-db
      DBNAME: omar_prod
      DBPASS: abc123
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
      O2URL: spring-cloud.radiantbluecloud.com/o2-omar
      TLV_URL: spring-cloud.radiantbluecloud.com/tlv
      WMSPORT:
      WMSURL: spring-cloud.radiantbluecloud.com/o2-wms
    image: ${DOCKER_REGISTRY_URI}/o2-superoverlay
    ports:
      - "5009:8080"
    restart: always
    volumes:
      - /home:/home
      - /Users:/Users
  o2-web-proxy:
    build: ./o2-web-proxy
    environment:
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
    image: ${DOCKER_REGISTRY_URI}/o2-web-proxy
    ports:
      - "80:80"
    restart: always
    volumes:
      - /home:/home
      - /Users:/Users
  o2-wfs:
    build:
      context: ./o2-wfs
    environment:
      DBHOST: o2-db
      DBNAME: omar_prod
      DBPASS: abc123
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
    image: ${DOCKER_REGISTRY_URI}/o2-wfs
    ports:
      - "4998:8080"
    restart: always
    volumes:
      - /home:/home
  o2-wms:
    build:
      context: ./o2-wms
    environment:
      DBHOST: o2-db
      DBNAME: omar_prod
      DBPASS: abc123
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
    image: ${DOCKER_REGISTRY_URI}/o2-wms
    ports:
      - "4997:8080"
    restart: always
    volumes:
      - /home:/home
      - /Users:/Users
o2-wmts:
  build:
    context: ./o2-wmts
  environment:
    DBHOST: o2-db
    DBNAME: omar_prod
    DBPASS: abc123
    DBPORT: 5432
    DBUSER: postgres_user
    DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
    WFSPORT:
    WFSSERVER: spring-cloud.radiantbluecloud.com/o2-wfs
    WMSPORT:
    WMSSERVER: spring-cloud.radiantbluecloud.com/o2-wms
  image: ${DOCKER_REGISTRY_URI}/o2-wmts
  ports:
    - "4999:8080"
  restart: always
  volumes:
    - /home:/home
    - /Users:/Users
