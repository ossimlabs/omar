version: '2'
services:
  # o2-web-proxy:
  #   build: ./o2-web-proxy
  #   image: ${DOCKER_REGISTRY_URI}/o2-web-proxy
  #   container_name: o2-web-proxy
  #   environment:
  #     DOCKER_HOST_IP: localhost
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - /Users/Shared/data:/data
  #   restart: always
  # o2-base:
  #   # build: ./o2-base
  #   container_name: o2-base
  #   image: ${DOCKER_REGISTRY_URI}/o2-base
  # o2-db:
  #   #build: ./o2-db
  #   image: ${DOCKER_REGISTRY_URI}/o2-db
  #   container_name: o2-db
  #   environment:
  #     POSTGRES_USER: postgres_user
  #     POSTGRES_PASSWORD: abc123
  #     POSTGRES_DB: omar_prod
  #   ports:
  #     - "4990:5432"
  #   restart: always
  # o2-stager:
  #   #build: ./o2-stager
  #   image: ${DOCKER_REGISTRY_URI}/o2-stager
  #   container_name: o2-stager
  #   environment:
  #     DBHOST: o2-db
  #     DBPORT: 5432
  #     DBNAME: omar_prod
  #     DBUSER: postgres_user
  #     DBPASS: abc123
  #     DOCKER_HOST_IP: localhost
  #   volumes:
  #     - /Users/Shared/data:/data
  #   ports:
  #     - "5002:8080"
  #   # depends_on:
  #   #   - o2-base
  #   #   - o2-db
  #   #   - o2-web-proxy
  #   restart: always
  o2-wms:
    build: ./o2-wms
    image: ${DOCKER_REGISTRY_URI}/o2-wms
    container_name: o2-wms
    environment:
      DBHOST: o2-db
      DBPORT: 5432
      DBNAME: omar_prod
      DBUSER: postgres_user
      DBPASS: abc123
      DOCKER_HOST_IP: localhost
    volumes:
      # Mount the the host local data directory to the container
      - /Users:/Users
    ports:
      - "4997:8080"
    # depends_on:
    #   - o2-db
    #   - o2-stager
    #   - o2-web-proxy
    # restart: always
  o2-wfs:
    build: ./o2-wfs
    image: ${DOCKER_REGISTRY_URI}/o2-wfs
    container_name: o2-wfs
    environment:
      DBHOST: o2-db
      DBPORT: 5432
      DBNAME: omar_prod
      DBUSER: postgres_user
      DBPASS: abc123
      DOCKER_HOST_IP: localhost
    volumes:
      # Mount the the host local data directory to the container
      - /Users:/Users
    ports:
      - "4998:8080"
    # depends_on:
    #   - o2-base
    #   - o2-db
    #   - o2-stager
    #   - o2-wms
    #   - o2-web-proxy
    # restart: always
  # # o2-wcs:
  # #   build: ./o2-wcs
  # #   image: ${DOCKER_REGISTRY_URI}/o2-wcs
  # #   container_name: o2-wcs
  # #   environment:
  # #     DBHOST: o2-db
  # #     DBPORT: 5432
  # #     DBNAME: omar_prod
  # #     DBUSER: postgres_user
  # #     DBPASS: abc123
  # #     DOCKER_HOST_IP: localhost
  # #   volumes:
  # #     - /Users/Shared/data:/data
  # #   ports:
  # #     - "5013:8080"
  # #   depends_on:
  # #     #- o2-base
  # #     - o2-db
  # #     - o2-stager
  # #     #- o2-wms
  # #     #- o2-wfs
  # #     - o2-web-proxy
  o2-omar:
    build: ./o2-omar
    image: ${DOCKER_REGISTRY_URI}/o2-omar
    container_name: o2-omar
    environment:
      DBHOST: o2-db
      DBPORT: 5432
      DBNAME: omar_prod
      DBUSER: postgres_user
      DBPASS: abc123
      DOCKER_HOST_IP: localhost
      WFSURL: localhost/o2-wfs
      WFSPORT:
      WMSURL: localhost/o2-wms
      WMSPORT:
      STAGERURL: localhost/o2-stager
      STAGERPORT:
      DOWNLOADURL: localhost/o2-download
      DOWNLOADPORT:
      KMLURL: localhost/o2-superoverlay
      KMLPORT:
      PREDIOURL: localhost/o2-predio
      PREDIOPORT:
      PREDIOENABLED: "false"
      TWOFISHURL: localhost/twofishes
      TWOFISHPORT:
      SWIPEURL: localhost/o2-swipe/swipe/index
      SWIPEPORT:
      SWIPEENABLED: "true"
      JPIPURL:
      JPIPPORT:
      JPIPENABLED: "true"
      WMTSURL: localhost/o2-wmts
      WMTSPORT:
      WMTSENABLED: "true"
      PWIKURL:
      PWIKPORT:
      PWIKENABLED: "true"
      APIURL:
      APIPORT:
      APIENABLED: "false"
      BANNERCOLOR: green
      BANNERCLASSIFICATION: Unclassified
    volumes:
      # Mount the the host local data directory to the container
      - /Users:/Users
    ports:
      - "5010:8080"
    # depends_on:
    #   - o2-base
    #   - o2-db
    #   - o2-wms
    #   - o2-wfs
    #   - o2-stager
    #   - o2-web-proxy
    # restart: always
  # o2-wmts:
  #   #build: ./o2-wmts
  #   image: ${DOCKER_REGISTRY_URI}/o2-wmts
  #   container_name: o2-wmts
  #   environment:
  #     DBHOST: o2-db
  #     DBPORT: 5432
  #     DBNAME: omar_prod
  #     DBUSER: postgres_user
  #     DBPASS: abc123
  #     DOCKER_HOST_IP: localhost
  #     WFSSERVER: localhost/o2-wfs
  #     WFSPORT:
  #     WMSSERVER: localhost/o2-wms
  #     WMSPORT:
  #   ports:
  #     - "4999:8080"
  #   # depends_on:
  #     # - o2-base
  #     # - o2-db
  #     # - o2-web-proxy
  #   restart: always
  # # o2-sqs:
  # #   #build: ./o2-sqs
  # #   image: ${DOCKER_REGISTRY_URI}/o2-sqs
  # #   container_name: o2-sqs
  # #   environment:
  # #     AWSDNS: sqs.us-east-1.amazonaws.com
  # #     AWSQUEUEPATH: 320588532383/avro-tst
  # #     WAIT_TIME_SECONDS: 20
  # #     NUMBER_OF_MESSAGES: 1
  # #     POLLING_INTERVAL_SECONDS: 10
  # #     DESTINATION_TYPE: post
  # #     DESTINATION_POST_END_POINT: o2-avro
  # #     DESTINATION_POST_END_POINT_PORT: :8080
  # #     DESTINATION_POST_FIELD: message
  # #     DOCKER_HOST_IP: localhost
  # #   volumes:
  # #     # Modify the path below to reflect your
  # #     # AWS credentials location. Example:
  # #     - /Users/<YourUserName>/.aws:/root/.aws
  # #   ports:
  # #     - "5000:8080"
  # #   # depends_on:
  # #   #   - o2-base
  # #   #   - o2-stager
  # #   #   - o2-avro
  # #   #   - o2-web-proxy
  # #   restart: always
  # # o2-avro:
  # #   #build: ./o2-avro
  # #   image: ${DOCKER_REGISTRY_URI}/o2-avro
  # #   container_name: o2-avro
  # #   environment:
  # #     DBHOST: o2-db
  # #     DBPORT: 5432
  # #     DBNAME: omar_prod
  # #     DBUSER: postgres_user
  # #     DBPASS: abc123
  # #     DOCKER_HOST_IP: localhost
  # #     ADDRASTERENDPOINTURL: o2-stager
  # #     ADDRASTERENDPOINTPORT: :8080
  # #   volumes:
  # #     # Mount the the host local data directory to the container
  # #     - /Users/Shared/data:/data
  # #   ports:
  # #     - "5001:8080"
  # #   # depends_on:
  # #   #   - o2-base
  # #   #   - o2-db
  # #   #   - o2-stager
  # #   #   - o2-web-proxy
  # #   restart: always
  # o2-jpip:
  #   #build: ./o2-jpip
  #   image: ${DOCKER_REGISTRY_URI}/o2-jpip
  #   container_name: o2-jpip
  #   environment:
  #     DBHOST: o2-db
  #     DBPORT: 5432
  #     DBNAME: omar_prod
  #     DBUSER: postgres_user
  #     DBPASS: abc123
  #     DOCKER_HOST_IP: localhost
  #     JPIPCACHEDIR: /data/jpip-cache
  #     JPIPSERVERURL: localhost
  #     JPIPSERVERPORT: :5004
  #   volumes:
  #     # Mount the the host local data directory to the container
  #     - /Users/Shared/data:/data
  #   ports:
  #     - "5003:8080"
  #   # depends_on:
  #   #   - o2-base
  #   #   - o2-web-proxy
  #   restart: always
  # o2-jpip-server:
  #   #build: ./o2-jpip-server
  #   image: ${DOCKER_REGISTRY_URI}/o2-jpip-server
  #   container_name: o2-jpip-server
  #   environment:
  #     JPIPCACHEDIR: /data/jpip-cache
  #     JPIPSERVERURL: localhost
  #     JPIPSERVERPORT: 8080
  #     DOCKER_HOST_IP: localhost
  #   volumes:
  #     # Mount the the host local data directory to the container
  #     - /Users/Shared/data:/data
  #   ports:
  #     - "5004:8080"
  #   #depends_on:
  #     #- o2-base
  #   restart: always
  # o2-superoverlay:
  #   #build: ./o2-superoverlay
  #   image: ${DOCKER_REGISTRY_URI}/o2-superoverlay
  #   container_name: o2-superoverlay
  #   environment:
  #     DBHOST: o2-db
  #     DBPORT: 5432
  #     DBNAME: omar_prod
  #     DBUSER: postgres_user
  #     DBPASS: abc123
  #     DOCKER_HOST_IP: localhost
  #     WMSURL: localhost/o2-superoverlay
  #     WMSPORT:
  #   ports:
  #     - "5009:8080"
  #   # depends_on:
  #   #   - o2-base
  #   #   - o2-web-proxy
  #   restart: always
  # o2-download:
  #   #build: ./o2-download
  #   image: ${DOCKER_REGISTRY_URI}/o2-download
  #   container_name: o2-download
  #   environment:
  #     DBHOST: o2-db
  #     DBPORT: 5432
  #     DBNAME: omar_prod
  #     DBUSER: postgres_user
  #     DBPASS: abc123
  #     DOCKER_HOST_IP: localhost
  #   volumes:
  #     # Mount the the host local data directory to the container
  #     - /Users/Shared/data:/data
  #   ports:
  #     - "5011:8080"
  #   # depends_on:
  #   #   - o2-base
  #   #   - o2-web-proxy
  #   restart: always
  # o2-swipe:
  #   #build: ./o2-swipe
  #   image: ${DOCKER_REGISTRY_URI}/o2-swipe
  #   container_name: o2-swipe
  #   environment:
  #     DBHOST: o2-db
  #     DBPORT: 5432
  #     DBNAME: omar_prod
  #     DBUSER: postgres_user
  #     DBPASS: abc123
  #     DOCKER_HOST_IP: localhost
  #     WFSURL: localhost/o2-wfs
  #     WFSPORT:
  #     WMSURL: localhost/o2-wms
  #     WMSPORT:
  #   ports:
  #     - "5012:8080"
  #   # depends_on:
  #   #   - o2-base
  #   #   - o2-db
  #   #   - o2-stager
  #   #   - o2-web-proxy
  #   restart: always
  o2-mensa:
    build: ./o2-mensa
    image: ${DOCKER_REGISTRY_URI}/o2-mensa
    container_name: o2-mensa
    environment:
      DOCKER_HOST_IP: localhost
    volumes:
      # Mount the the host local data directory to the container
      - /Users:/Users
    ports:
      - "5014:8080"
    # depends_on:
    #   - o2-base
    #   - o2-web-proxy
  # o2-twofishes:
  #   #build: ./twofishes
  #   image: ${DOCKER_REGISTRY_URI}/twofishes
  #   container_name: twofishes
  #   ports:
  #     - "5006:8081"
  #   restart: always
