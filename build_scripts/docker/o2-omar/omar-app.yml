server:
  contextPath: /o2-omar
  port: 8080

environments:
  production:
    dataSource:
      pooled: true
      jmxExport: true
      driverClassName: org.postgresql.Driver
      username: ${DBUSER}
      password: ${DBPASS}
      dialect: 'org.hibernate.spatial.dialect.postgis.PostgisDialect'
      url: jdbc:postgresql://${DBHOST}:${DBPORT}/${DBNAME}

omar:
  openlayers:
    baseMaps:
      -
        layerType: "tilewms"
        title: "Open Street Map"
        url: http://vmap0.tiles.osgeo.org/wms/vmap0
        params:
          layers: "basic,coastline_01,coastline_02,priroad,secroad,rail,ferry,tunnel,bridge,trail,CAUSE,clabel,statelabel,ctylabel"
          format: "image/jpeg"
        options:
          visible: false
      -
        layerType: "xyz"
        title: "OSM Basic"
        url: http://o2.radiantbluecloud.com/o2-basemap/styles/basic-v9/rendered/{z}/{x}/{y}.png
        options:
          visible: false
      -
        layerType: "xyz"
        title: "OSM Bright"
        url: http://o2.radiantbluecloud.com/o2-basemap/styles/bright-v9/rendered/{z}/{x}/{y}.png
        options:
          visible: true
  app:
    # root:
    #   baseUrl: http://o2-omar/omar-app
    wfs:
      baseUrl: http://${WFSURL}/wfs?
      enabled: true
      proxy: /proxy/index?url=
    wms:
      baseUrl: http://${WMSURL}/wms?
      enabled: true
    imageSpace:
      baseUrl: http://${WMSURL}/imageSpace
      enabled: true
    thumbnails:
      baseUrl: http://${WMSURL}/imageSpace/getThumbnail
    footprints:
      baseUrl: http://${WMSURL}/footprints/getFootprints
    mensaApp:
      baseUrl: http://${MENSAURL}/mensa
    stagerApp:
      baseUrl: http://${STAGERURL}
    downloadApp:
      baseUrl: http://${DOWNLOADURL}
    kmlApp:
      baseUrl: http://${KMLURL}/
    predio:
      baseUrl: http://${PREDIOURL}/predio/
      enabled: ${PREDIOENABLED}
    twofishes:
      baseUrl: http://${TWOFISHURL}/twofish
      proxy: /twoFishesProxy
    #swipeApp:
      #baseUrl: http://${SWIPEURL}/swipe
      #enabled: ${SWIPEENABLED}
    jpipApp:
      baseUrl: ${JPIPURL}/jpip
      enabled: ${JPIPENABLED}
    wmtsApp:
      baseUrl: http://${WMTSURL}/wmtsApp/index
      enabled: ${WMTSENABLED}
    piwikApp:
      baseUrl: http://${PIWIKURL}/piwik/
      enabled: ${PWIKENABLED}
    apiApp:
      baseUrl: http://${APIURL}/api
      enabled: ${APIENABLED}
    tlvApp:
      baseUrl: http://${TLVURL}
      enabled: ${TLVENABLED}
    misc:
      icons:
        green-marker: search_marker_green.png

classificationBanner:
  backgroundColor: ${BANNERCOLOR}
  classificationType: ${BANNERCLASSIFICATION}

endpoints:
  # health:
    enabled: true

---
grails:
  serverURL: http://${DOCKER_HOST_IP}/o2-omar
#   assets:
#     url: http://${DOCKER_HOST_IP}/o2-omar/assets/

spring:
  cloud:
    config:
      enabled: false
    discovery:
      enabled: false
