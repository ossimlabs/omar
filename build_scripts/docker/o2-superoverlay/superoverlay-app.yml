server:
  contextPath: /o2-superoverlay
  port: 8080

environments:
  production:
    dataSource:
      pooled: true
      jmxExport: true
      driverClassName: org.postgresql.Driver
      username: ${DBUSER}
      password: ${DBPASS}
      dialect: 'org.hibernate.spatial.dialect.postgis.PostgisDialect'
      url: jdbc:postgresql://${DBHOST}${DBPORT}/${DBNAME}

wfs:
  featureTypeNamespaces:
      - prefix: omar
        uri: http://omar.ossim.org

  datastores:
      - namespaceId: omar
        datastoreId: omar_prod
        datastoreParams:
          dbtype: postgis
          host: o2-db
          port: '5432'
          database: omar_prod
          user: postgres_user
          passwd: abc123
          'Expose primary keys': 'true'
          namespace: http://omar.ossim.org
  featureTypes:
      - name: raster_entry
        title: raster_entry
        description: ''
        keywords:
          - omar
          - raster_entry
          - features
        datastoreId: omar_prod

      - name: video_data_set
        title: video_data_set
        description: ''
        keywords:
          - omar
          - video_data_set
          - features
        datastoreId: omar_prod

omar:
  o2:
    baseUrl: http://${O2URL}
  wfs:
    baseUrl: http://${WFSURL}
  wms:
    baseUrl: http://${WMSURL}
  superOverlay:
    wmsUrl: http://${WMSURL}/wms/getMap

endpoints:
  health:
    enabled: true

---
grails:
  serverURL: http://${DOCKER_HOST_IP}/o2-superoverlay
#   assets:
#     url: http://${DOCKER_HOST_IP}/o2-superoverlay/assets/

spring:
  cloud:
    config:
      enabled: false
    discovery:
      enabled: false
