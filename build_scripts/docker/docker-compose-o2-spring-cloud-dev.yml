version: '2'
services:
  o2-download:
    build:
      args:
        - O2_DEV_HOME=$O2_DEV_HOME
      context: ./o2-download
      dockerfile: Dockerfile-dev
    environment:
      DBHOST: o2-db
      DBPASS: abc123
      DBNAME: omar_prod
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: localhost
    image: ${DOCKER_REGISTRY_URI}/o2-download-dev
    ports:
      - "5011:8080"
    restart: always
    volumes:
      - /home:/home
      - /Users:/Users
  o2-jpip:
    build:
      args:
        - O2_DEV_HOME=$O2_DEV_HOME
      context: ./o2-jpip
      dockerfile: Dockerfile-dev
    environment:
      DBHOST: o2-db
      DBNAME: omar_prod
      DBPASS: abc123
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: localhost
      JPIPCACHEDIR: /data/jpip-cache
      JPIPSERVERPORT: :5004
      JPIPSERVERURL: localhost
    image: ${DOCKER_REGISTRY_URI}/o2-jpip-dev
    ports:
      - "5003:8080"
    restart: always
    volumes:
      - /Users:/Users
      - /home:/home
  o2-mensa:
    build:
      args:
        - O2_DEV_HOME=$O2_DEV_HOME
      context: ./o2-mensa
      dockerfile: Dockerfile-dev
    environment:
      DOCKER_HOST_IP: localhost
    image: ${DOCKER_REGISTRY_URI}/o2-mensa-dev
    ports:
      - "5014:8080"
    volumes:
      - /home:/home
      - /Users:/Users
  o2-omar:
    build:
      args:
        - O2_DEV_HOME=$O2_DEV_HOME
      context: ./o2-omar
      dockerfile: Dockerfile-dev
    environment:
      APIENABLED: "false"
      APIPORT:
      APIURL:
      BANNERCOLOR: green
      BANNERCLASSIFICATION: Unclassified
      DBHOST: o2-db
      DBNAME: omar_prod
      DBPASS: abc123
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: localhost
      DOWNLOADPORT:
      DOWNLOADURL: localhost/o2-download
      JPIPENABLED: "true"
      JPIPPORT:
      JPIPURL:
      KMLPORT:
      KMLURL: localhost/o2-superoverlay
      PREDIOENABLED: "false"
      PREDIOPORT:
      PREDIOURL: localhost/o2-predio
      PWIKENABLED: "true"
      PWIKPORT:
      PWIKURL:
      STAGERPORT:
      STAGERURL: localhost/o2-stager
      TWOFISHPORT:
      TWOFISHURL: localhost/twofishes
      WFSPORT:
      WFSURL: localhost/o2-wfs
      WMSPORT:
      WMSURL: localhost/o2-wms
      WMTSENABLED: "true"
      WMTSPORT:
      WMTSURL: localhost/o2-wmts
    image: ${DOCKER_REGISTRY_URI}/o2-omar-dev
    ports:
      - "5010:8080"
    restart: always
    volumes:
      - /home:/home
      - /Users:/Users
  o2-stager:
    build:
      args:
        - O2_DEV_HOME=${O2_DEV_HOME}
      context: ./o2-stager
      dockerfile: Dockerfile-dev
    environment:
      DBHOST: o2-db
      DBNAME: omar_prod
      DBPASS: abc123
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: localhost
    image: ${DOCKER_REGISTRY_URI}/o2-stager-dev
    ports:
      - "5002:8080"
    restart: always
    volumes:
      - /home:/home
      - /Users:/Users
  o2-superoverlay:
    build:
      args:
        - O2_DEV_HOME=$O2_DEV_HOME
      context: ./o2-superoverlay
      dockerfile: Dockerfile-dev
    environment:
      DBHOST: o2-db
      DBNAME: omar_prod
      DBPASS: abc123
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: localhost
      O2URL: localhost/o2-omar
      WMSPORT:
      WMSURL: localhost/o2-wms
    image: ${DOCKER_REGISTRY_URI}/o2-superoverlay-dev
    ports:
      - "5009:8080"
    restart: always
    volumes:
      - /home:/home
  o2-web-proxy:
    build:
      context: ./o2-web-proxy
      dockerfile: Dockerfile-dev
    environment:
      DOCKER_HOST_IP: localhost
    image: ${DOCKER_REGISTRY_URI}/o2-web-proxy-dev
    ports:
      - "80:80"
    restart: always
    volumes:
      - /home:/home
      - /Users:/Users
  o2-wfs:
    build:
      args:
        - O2_DEV_HOME=${O2_DEV_HOME}
      context: ./o2-wfs
      dockerfile: Dockerfile-dev
    environment:
      DBHOST: o2-db
      DBNAME: omar_prod
      DBPASS: abc123
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: localhost
    image: ${DOCKER_REGISTRY_URI}/o2-wfs-dev
    ports:
      - "4998:8080"
    restart: always
    volumes:
      - /home:/home
      - /Users:/Users
  o2-wms:
    build:
      args:
        - O2_DEV_HOME=${O2_DEV_HOME}
      context: ./o2-wms
      dockerfile: Dockerfile-dev
    environment:
      DBHOST: o2-db
      DBNAME: omar_prod
      DBPASS: abc123
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: localhost
    image: ${DOCKER_REGISTRY_URI}/o2-wms-dev
    ports:
      - "4997:8080"
    restart: always
    volumes:
      - /home:/home
      - /Users:/Users
  o2-wmts:
    build:
      args:
        - O2_DEV_HOME=$O2_DEV_HOME
      context: ./o2-wmts
      dockerfile: Dockerfile-dev
    environment:
      DBHOST: o2-db
      DBNAME: omar_prod
      DBPASS: abc123
      DBPORT: 5432
      DBUSER: postgres_user
      DOCKER_HOST_IP: localhost
      WFSPORT:
      WFSSERVER: localhost/o2-wfs
      WMSPORT:
      WMSSERVER: localhost/o2-wms
    image: ${DOCKER_REGISTRY_URI}/o2-wmts-dev
    ports:
      - "4999:8080"
    restart: always
    volumes:
      - /home:/home
      - /Users:/Users
