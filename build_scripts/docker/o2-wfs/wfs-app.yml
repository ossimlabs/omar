server:
  contextPath: /o2-wfs
  port: 8080

# environments:
#   production:
#     dataSource:
#       pooled: true
#       jmxExport: true
#       driverClassName: org.postgresql.Driver
#       username: ${DBUSER}
#       password: ${DBPASS}
#       dialect: 'org.hibernate.spatial.dialect.postgis.PostgisDialect'
#       url: jdbc:postgresql://${DBHOST}${DBPORT}/${DBNAME}

---

wfs:
  featureTypeNamespaces:
      - prefix: omar
        uri: http://omar.ossim.org

  datastores:
      - namespaceId: omar
        datastoreId: omar_prod
        datastoreParams:
          dbtype: postgis
          host: ${DBHOST}
          port: ${DBPORT}
          database: ${DBNAME}
          user: ${DBUSER}
          passwd: ${DBPASS}
          'Expose primary keys': 'true'
          namespace: http://omar.ossim.org
  featureTypes:
      - name: raster_entry
        title: raster_entry
        description: ''
        keywords:
          - omar
          - raster_entry
          - features
        datastoreId: omar_prod

      - name: video_data_set
        title: video_data_set
        description: ''
        keywords:
          - omar
          - video_data_set
          - features
        datastoreId: omar_prod

wms:
  styles:
    byFileType:
      adrg:
        filter: file_type='adrg'
        color:
          r: 50
          g: 111
          b: 111
          a: 255
      aaigrid:
        filter: file_type='aaigrid'
        color: pink
      cadrg:
        filter: file_type='cadrg'
        color:
          r: 0
          g: 255
          b: 255
          a: 255
      ccf:
        filter: file_type='ccf'
        color:
          r: 128
          g: 100
          b: 255
          a: 255
      cib:
        filter: file_type='cib'
        color:
          r: 0
          g: 128
          b: 128
          a: 255
      doqq:
        filter: file_type='doqq'
        color: purple
      dted:
        filter: file_type='dted'
        color:
          r: 0
          g: 255
          b: 0
          a: 255
      imagine_hfa:
        filter: file_type='imagine_hfa'
        color: lightGray
      jpeg:
        filter: file_type='jpeg'
        color:
          r: 255
          g: 255
          b: 0
          a: 255
      jpeg2000:
        filter: file_type='jpeg2000'
        color:
          r: 255
          g: 200
          b: 0
          a: 255
      landsat7:
        filter: file_type='landsat7'
        color:
          r: 255
          g: 0
          b: 255
          a: 255
      mrsid:
        filter: file_type='mrsid'
        color:
          r: 0
          g: 188
          b: 0
          a: 255
      nitf:
        filter: file_type='nitf'
        color:
          r: 0
          g: 0
          b: 255
          a: 255
      tiff:
        filter: file_type='tiff'
        color:
          r: 255
          g: 0
          b: 0
          a: 255
      mpeg:
        filter: file_type='mpeg'
        color:
          r: 164
          g: 254
          b: 255
          a: 255
      unspecified:
        filter: file_type='unspecified'
        color: white

endpoints:
  # health:
    enabled: true

---
grails:
  serverURL: http://${DOCKER_HOST_IP}/o2-wfs
#   assets:
#     url: http://${DOCKER_HOST_IP}/o2-wfs/assets/

spring:
  cloud:
    config:
      enabled: false
    discovery:
      enabled: false
