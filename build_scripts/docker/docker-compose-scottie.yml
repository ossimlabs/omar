version: '2'
services:
  o2-web-proxy:
    build: ./o2-web-proxy
    image: ossimlabs/o2-web-proxy
    container_name: o2-web-proxy
    environment:
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
    ports:
      - "80:80"
    volumes:
    #  - /Users/Shared/data:/data
      - /home:/home
    restart: always
  # o2-base:
  #   build: ./o2-base
  #   container_name: o2-base
  #   image: ossimlabs/o2-base
  #o2-db:
  #  #build: ./o2-db
  #  image: ossimlabs/o2-db
  #  container_name: o2-db
  #  environment:
  #    POSTGRES_USER: postgres_user
  #    POSTGRES_PASSWORD: abc123
  #    POSTGRES_DB: omar_prod
  #  ports:
  #    - "4990:5432"
  #  restart: always
  o2-stager:
    build: 
      context: ./o2-stager
      args:
        - O2_DEV_HOME=${O2_DEV_HOME}
    image: ossimlabs/o2-stager
    container_name: o2-stager
    environment:
      DBHOST: o2-db
      DBPORT: :5432
      DBNAME: omar_prod
      DBUSER: postgres_user
      DBPASS: abc123
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
    volumes:
    #  - /Users/Shared/data:/data
      - /home:/home
    ports:
      - "5002:8080"
    # depends_on:
    #   - o2-base
    #   - o2-db
    #   - o2-web-proxy
    restart: always
  o2-wms:
    build: 
      context: ./o2-wms
      args:
        - O2_DEV_HOME=${O2_DEV_HOME}
    image: ossimlabs/o2-wms
    container_name: o2-wms
    environment:
      DBHOST: o2-db
      DBPORT: :5432
      DBNAME: omar_prod
      DBUSER: postgres_user
      DBPASS: abc123
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
    volumes:
    #  - /Users/Shared/data:/data
      - /home:/home
    ports:
      - "4997:8080"
    # depends_on:
    #   - o2-db
    #   - o2-stager
    #   - o2-web-proxy
    restart: always
  o2-wfs:
    build: 
      context: ./o2-wfs
      args:
        - O2_DEV_HOME=${O2_DEV_HOME}
    image: ossimlabs/o2-wfs
    container_name: o2-wfs
    environment:
      DBHOST: o2-db
      DBPORT: :5432
      DBNAME: omar_prod
      DBUSER: postgres_user
      DBPASS: abc123
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
    volumes:
    #  - /Users/Shared/data:/data
      - /home:/home
    ports:
      - "4998:8080"
    # depends_on:
    #   - o2-base
    #   - o2-db
    #   - o2-stager
    #   - o2-wms
    #   - o2-web-proxy
    restart: always
  # o2-wcs:
  #   build: ./o2-wcs
  #   image: ossimlabs/o2-wcs
  #   container_name: o2-wcs
  #   environment:
  #     DBHOST: o2-db
  #     DBPORT: :5432
  #     DBNAME: omar_prod
  #     DBUSER: postgres_user
  #     DBPASS: abc123
  #     DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
  #   volumes:
  #     - /Users/Shared/data:/data
  #    - /home:/home
  #   ports:
  #     - "5013:8080"
  #   depends_on:
  #     #- o2-base
  #     - o2-db
  #     - o2-stager
  #     #- o2-wms
  #     #- o2-wfs
  #     - o2-web-proxy
  o2-omar:
    build: 
      context: ./o2-omar
      args:
        - O2_DEV_HOME=$O2_DEV_HOME
    image: ossimlabs/o2-omar
    container_name: o2-omar
    environment:
      DBHOST: o2-db
      DBPORT: :5432
      DBNAME: omar_prod
      DBUSER: postgres_user
      DBPASS: abc123
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
      WFSURL: spring-cloud.radiantbluecloud.com/o2-wfs
      WFSPORT:
      WMSURL: spring-cloud.radiantbluecloud.com/o2-wms
      WMSPORT:
      STAGERURL: spring-cloud.radiantbluecloud.com/o2-stager
      STAGERPORT:
      DOWNLOADURL: spring-cloud.radiantbluecloud.com/o2-download
      DOWNLOADPORT:
      KMLURL: spring-cloud.radiantbluecloud.com/o2-superoverlay
      KMLPORT:
      PREDIOURL: spring-cloud.radiantbluecloud.com/o2-predio
      PREDIOPORT:
      PREDIOENABLED: "false"
      TWOFISHURL: spring-cloud.radiantbluecloud.com/twofishes
      TWOFISHPORT:
      SWIPEURL: spring-cloud.radiantbluecloud.com/o2-swipe/swipe/index
      SWIPEPORT:
      SWIPEENABLED: "true"
      JPIPURL:
      JPIPPORT:
      JPIPENABLED: "true"
      WMTSURL: spring-cloud.radiantbluecloud.com/o2-wmts
      WMTSPORT:
      WMTSENABLED: "true"
      PWIKURL:
      PWIKPORT:
      PWIKENABLED: "true"
      APIURL:
      APIPORT:
      APIENABLED: "false"
      BANNERCOLOR: green
      BANNERCLASSIFICATION: Unclassified
    volumes:
    #  - /Users/Shared/data:/data
      - /home:/home
    ports:
      - "5010:8080"
    # depends_on:
    #   - o2-base
    #   - o2-db
    #   - o2-wms
    #   - o2-wfs
    #   - o2-stager
    #   - o2-web-proxy
    restart: always
  o2-wmts:
    build: 
      context: ./o2-wmts
      args:
        - O2_DEV_HOME=$O2_DEV_HOME
    image: ossimlabs/o2-wmts
    container_name: o2-wmts
    environment:
      DBHOST: o2-db
      DBPORT: :5432
      DBNAME: omar_prod
      DBUSER: postgres_user
      DBPASS: abc123
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
      WFSSERVER: spring-cloud.radiantbluecloud.com/o2-wfs
      WFSPORT:
      WMSSERVER: spring-cloud.radiantbluecloud.com/o2-wms
      WMSPORT:
    volumes:
      - /home:/home
    ports:
      - "4999:8080"
    # depends_on:
      # - o2-base
      # - o2-db
      # - o2-web-proxy
    restart: always
  # o2-sqs:
  #   build: 
  #     context: ./o2-sqs
  #     args: 
  #       - O2_DEV_HOME=$O2_DEV_HOME
  #   image: ossimlabs/o2-sqs
  #   container_name: o2-sqs
  #   environment:
  #     AWSDNS: sqs.us-east-1.amazonaws.com
  #     AWSQUEUEPATH: 320588532383/avro-tst
  #     WAIT_TIME_SECONDS: 20
  #     NUMBER_OF_MESSAGES: 1
  #     POLLING_INTERVAL_SECONDS: 10
  #     DESTINATION_TYPE: post
  #     DESTINATION_POST_END_POINT: o2-avro
  #     DESTINATION_POST_END_POINT_PORT: :8080
  #     DESTINATION_POST_FIELD: message
  #     DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
  #   volumes:
  #     # Modify the path below to reflect your
  #     # AWS credentials location. Example:
  #     - /Users/<YourUserName>/.aws:/root/.aws
  #     - /home:/home
  #   ports:
  #     - "5000:8080"
  #   # depends_on:
  #   #   - o2-base
  #   #   - o2-stager
  #   #   - o2-avro
  #   #   - o2-web-proxy
  #   restart: always
  # o2-avro:
  #   build: 
  #     context: ./o2-avro
  #     args:
  #       - O2_DEV_HOME=$O2_DEV_HOME
  #   image: ossimlabs/o2-avro
  #   container_name: o2-avro
  #   environment:
  #     DBHOST: o2-db
  #     DBPORT: :5432
  #     DBNAME: omar_prod
  #     DBUSER: postgres_user
  #     DBPASS: abc123
  #     DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
  #     ADDRASTERENDPOINTURL: o2-stager
  #     ADDRASTERENDPOINTPORT: :8080
  #   volumes:
  #     # Mount the the host local data directory to the container
  #     - /Users/Shared/data:/data
  #     - /home:/home
  #   ports:
  #     - "5001:8080"
  #   # depends_on:
  #   #   - o2-base
  #   #   - o2-db
  #   #   - o2-stager
  #   #   - o2-web-proxy
  #   restart: always
  o2-jpip:
    build: 
      context: ./o2-jpip
      args:
        - O2_DEV_HOME=$O2_DEV_HOME
    image: ossimlabs/o2-jpip
    container_name: o2-jpip
    environment:
      DBHOST: o2-db
      DBPORT: :5432
      DBNAME: omar_prod
      DBUSER: postgres_user
      DBPASS: abc123
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
      JPIPCACHEDIR: /data/jpip-cache
      JPIPSERVERURL: spring-cloud.radiantbluecloud.com
      JPIPSERVERPORT: :5004
    volumes:
      # Mount the the host local data directory to the container
      #- /Users/Shared/data:/data
      - /home:/home
    ports:
      - "5003:8080"
    # depends_on:
    #   - o2-base
    #   - o2-web-proxy
    restart: always
  #o2-jpip-server:
  #  #build: ./o2-jpip-server
  #  image: ossimlabs/o2-jpip-server
  #  container_name: o2-jpip-server
  #  environment:
  #    JPIPCACHEDIR: /data/jpip-cache
  #    JPIPSERVERURL: spring-cloud.radiantbluecloud.com
  #    JPIPSERVERPORT: 8080
  #    DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
  #  volumes:
  #    # Mount the the host local data directory to the container
  #    - /Users/Shared/data:/data
  #    - /home:/home
  #  ports:
  #    - "5004:8080"
  #  #depends_on:
  #    #- o2-base
  #  restart: always
  o2-superoverlay:
    build: 
      context: ./o2-superoverlay
      args:
        - O2_DEV_HOME=$O2_DEV_HOME
    image: ossimlabs/o2-superoverlay
    container_name: o2-superoverlay
    environment:
      DBHOST: o2-db
      DBPORT: :5432
      DBNAME: omar_prod
      DBUSER: postgres_user
      DBPASS: abc123
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
      WMSURL: spring-cloud.radiantbluecloud.com/o2-superoverlay
      WMSPORT:
    volumes:
      - /home:/home
    ports:
      - "5009:8080"
    # depends_on:
    #   - o2-base
    #   - o2-web-proxy
    restart: always
  o2-download:
    build: 
      context: ./o2-download
      args:
        - O2_DEV_HOME=$O2_DEV_HOME
    image: ossimlabs/o2-download
    container_name: o2-download
    environment:
      DBHOST: o2-db
      DBPORT: :5432
      DBNAME: omar_prod
      DBUSER: postgres_user
      DBPASS: abc123
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
    volumes:
      # Mount the the host local data directory to the container
      #- /Users/Shared/data:/data
      - /home:/home
    ports:
      - "5011:8080"
    # depends_on:
    #   - o2-base
    #   - o2-web-proxy
    restart: always
  o2-swipe:
    build: 
      context: ./o2-swipe
      args:
        - O2_DEV_HOME=$O2_DEV_HOME
    image: ossimlabs/o2-swipe
    container_name: o2-swipe
    environment:
      DBHOST: o2-db
      DBPORT: :5432
      DBNAME: omar_prod
      DBUSER: postgres_user
      DBPASS: abc123
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
      WFSURL: spring-cloud.radiantbluecloud.com/o2-wfs
      WFSPORT:
      WMSURL: spring-cloud.radiantbluecloud.com/o2-wms
      WMSPORT:
    volumes:
      - /home:/home
    ports:
      - "5012:8080"
    # depends_on:
    #   - o2-base
    #   - o2-db
    #   - o2-stager
    #   - o2-web-proxy
    restart: always
  o2-mensa:
    build: 
      context: ./o2-mensa
      args:
        - O2_DEV_HOME=$O2_DEV_HOME
    image: ossimlabs/o2-mensa
    container_name: o2-mensa
    environment:
      DOCKER_HOST_IP: spring-cloud.radiantbluecloud.com
    volumes:
    #  - /Users/Shared/data:/data
      - /home:/home
    ports:
      - "5014:8080"
    # depends_on:
    #   - o2-base
    #   - o2-web-proxy
  #o2-twofishes:
  #  #build: ./twofishes
  #  image: ossimlabs/twofishes
  #  container_name: twofishes
  #  ports:
  #    - "5006:8081"
  #  restart: always
