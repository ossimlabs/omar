buildscript {
  ext {
    grailsVersion = project.grailsVersion
  }
  repositories {
    mavenLocal()
    if(System.env.OSSIM_MAVEN_PROXY)
    {
        maven { url "${System.env.OSSIM_MAVEN_PROXY}" }
    }
    else
    {
        maven { url "https://repo.grails.org/grails/core" }
    }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
  }
}

version "0.1"
group "omar.openlayers"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"
apply plugin: "asset-pipeline"

ext {
  grailsVersion = project.grailsVersion
  gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
  mavenLocal()
  if(System.env.OSSIM_MAVEN_PROXY)
  {
      maven { url "${System.env.OSSIM_MAVEN_PROXY}" }
  }
  else
  {
    maven { url "https://repo.grails.org/grails/core" }
  }
}

dependencyManagement {
  imports {
    mavenBom "org.grails:grails-bom:$grailsVersion"
  }
  applyMavenExclusions false
}

dependencies {
  compile 'org.webjars:openlayers:3.17.1'

  provided 'org.springframework.boot:spring-boot-starter-logging'
  provided "org.springframework.boot:spring-boot-starter-actuator"
  provided "org.springframework.boot:spring-boot-autoconfigure"
  provided "org.springframework.boot:spring-boot-starter-tomcat"

  provided "org.grails:grails-web-boot"
  provided "org.grails:grails-dependencies"
  provided 'javax.servlet:javax.servlet-api:3.1.0'

  testCompile "org.grails:grails-plugin-testing"
  testCompile "org.grails.plugins:geb"
  testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
  testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}
grailsPublish {
  // TODO: Provide values here
  user = 'user'
  key = 'key'
  githubSlug = 'foo/bar'
  license {
    name = 'Apache-2.0'
  }
  title = "My Plugin"
  desc = "Full plugin description"
  developers = [johndoe: "John Doe"]
  portalUser = ""
  portalPassword = ""
}

assets {
  packagePlugin = true
}
