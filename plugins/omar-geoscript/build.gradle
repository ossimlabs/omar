buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
    }
}

version "0.1"
group "omar.geoscript"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
  mavenLocal()
  maven { url "http://download.osgeo.org/webdav/geotools/" }
  maven { url "https://repo.grails.org/grails/core" }
  maven { url "http://repo.boundlessgeo.com/main" }
  maven { url "http://maven.geo-solutions.it/" }
  maven { url "https://artifacts.unidata.ucar.edu/content/repositories/unidata/" }
  mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

grails {
    exploded = true
    plugins {
      compile project( ':omar-core' )
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    console "org.grails:grails-console"
  compile 'net.sf.opencsv:opencsv:2.3'
//  compile 'org.postgresql:postgresql:9.4-1203-jdbc42'
  compile 'org.postgresql:postgresql:9.3-1100-jdbc41'
  compile 'xml-apis:xml-apis:1.0.b2'

  compile( "org.geoscript:geoscript-groovy:1.5.0" ) {
    exclude module: "slf4j-log4j12"
    exclude module: 'ehcache'
    exclude module: "jai_core"
    exclude module: "jai_codec"
    exclude module: "jai_imageio"
    exclude module: "postgresql"
    exclude module: "opencsv"
    exclude module: "xml-apis"
    exclude module: "groovy-all"
  }
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.8.2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}
grailsPublish {
    // TODO: Provide values here
    user = 'user'
    key = 'key'
    githubSlug = 'foo/bar'
    license {
        name = 'Apache-2.0'
    }
    title = "My Plugin"
    desc = "Full plugin description"
    developers = [johndoe:"John Doe"]
    portalUser = ""
    portalPassword = ""    
}

assets {
    packagePlugin = true
}
