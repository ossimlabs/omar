buildscript {
  ext {
    grailsVersion = project.grailsVersion
  }
  repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }

  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "org.grails.plugins:hibernate:4.3.10.5"
    classpath 'de.undercouch:gradle-download-task:2.0.0'

  }
}

import de.undercouch.gradle.tasks.download.Download

plugins {
  id "io.spring.dependency-management" version "0.5.2.RELEASE"
  id "com.jfrog.bintray" version "1.2"
}

evaluationDependsOnChildren()
version "0.1-SNAPSHOT"
group "org.grails.plugins"

apply plugin: 'de.undercouch.download'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "spring-boot"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-gsp"


// Used for publishing to central repository, remove if not needed
apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/grailsCentralPublishing.gradle'
apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'

ext {
  grailsVersion = project.grailsVersion
  gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
  mavenLocal()
  maven { url "http://download.osgeo.org/webdav/geotools/" }
  maven { url "https://repo.grails.org/grails/core" }
  maven { url "http://repo.boundlessgeo.com/main" }
  maven { url "http://maven.geo-solutions.it/" }
  maven { url "https://artifacts.unidata.ucar.edu/content/repositories/unidata/" }
  mavenCentral()
}

dependencyManagement {
  imports {
    mavenBom "org.grails:grails-bom:$grailsVersion"
  }
  applyMavenExclusions false
}

grails {
    exploded = true
    plugins {
      compile project( ':omar-core' )
    }
}

dependencies {


  compile "org.grails.plugins:hibernate"
  compile "org.grails.plugins:cache"
  compile "org.hibernate:hibernate-ehcache"
  compile "org.grails.plugins:scaffolding"


  compile 'net.sf.opencsv:opencsv:2.3'
//  compile 'org.postgresql:postgresql:9.4-1203-jdbc42'
  compile 'org.postgresql:postgresql:9.3-1100-jdbc41'
  compile 'xml-apis:xml-apis:1.0.b2'

  compile( "org.geoscript:geoscript-groovy:1.5.0" ) {
    exclude module: "slf4j-log4j12"
    exclude module: 'ehcache'
    exclude module: "jai_core"
    exclude module: "jai_codec"
    exclude module: "jai_imageio"
    exclude module: "postgresql"
    exclude module: "opencsv"
    exclude module: "xml-apis"
    exclude module: "groovy-all"
  }

  provided 'org.springframework.boot:spring-boot-starter-logging'
  provided "org.springframework.boot:spring-boot-starter-actuator"
  provided "org.springframework.boot:spring-boot-autoconfigure"
  provided "org.springframework.boot:spring-boot-starter-tomcat"

  provided "org.grails:grails-web-boot"
  provided "org.grails:grails-dependencies"
  provided 'javax.servlet:javax.servlet-api:3.1.0'

  testCompile "org.grails:grails-plugin-testing"

  console "org.grails:grails-console"

  compile "org.grails.plugins:scaffolding"


}

task wrapper( type: Wrapper ) {
  gradleVersion = gradleWrapperVersion
}

task downloadJavaVectorTiles( type: Download ) {
  src 'https://github.com/ElectronicChartCentre/ecc-mvn-repo/raw/master/releases/no/ecc/vectortile/java-vector-tile/1.0.5/java-vector-tile-1.0.5.jar'
  dest '3rdPartyJars/java-vector-tile-1.0.5.jar'
}

task installJavaVectorTiles( type: Exec, dependsOn: 'downloadJavaVectorTiles' ) {
  commandLine 'mvn',
      'install:install-file',
      '-Dfile=3rdPartyJars/java-vector-tile-1.0.5.jar',
      '-DgroupId=no.ecc.vectortile',
      '-DartifactId=java-vector-tile',
      '-Dversion=1.0.5',
      '-Dpackaging=jar'

}


//compileGroovy.dependsOn 'installJavaVectorTiles'
